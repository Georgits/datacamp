{
    "collab_server" : "",
    "contents" : "\n# Chapter 1: The binomial distribution ----\n\n\n# Simulating coin flips ---\n# Generate 10 separate random flips with probability .3\nrbinom(10,1,0.3)\n\n\n\n\n# Simulating draws from a binomial ----\n# Generate 100 occurrences of flipping 10 coins, each with 30% probability\nrbinom(100,10,0.3)\n\n\n\n# Calculating density of a binomial ----\n# Calculate the probability that 2 are heads using dbinom\ndbinom(2,10,0.3)\n\n# Confirm your answer with a simulation using rbinom\nmean(rbinom(10000, 10, 0.3) == 2)\n\n\n\n# Calculating cumulative density of a binomial ----\n# Calculate the probability that at least five coins are heads\n1 - pbinom(4,10,0.3)\n\n# Confirm your answer with a simulation of 10,000 trials\nmean(rbinom(10000,10,0.3) >= 5)\n\n\n\n# Varying the number of trials ----\n# Here is how you computed the answer in the last problem\nmean(rbinom(10000, 10, .3) >= 5)\n\n# Try now with 100, 1000, 10,000, and 100,000 trials\nmean(rbinom(100, 10, .3) >= 5)\nmean(rbinom(1000, 10, .3) >= 5)\nmean(rbinom(10000, 10, .3) >= 5)\nmean(rbinom(100000, 10, .3) >= 5)\n\n\n\n# Calculating the expected value ----\n# Calculate the expected value using the exact formula\n25 * 0.3\n\n# Confirm with a simulation using rbinom\nmean(rbinom(10000, 25, 0.3))\n\n\n\n\n# Calculating the variance ----\n# Calculate the variance using the exact formula\n25 * 0.3 * (1 - 0.3)\n\n# Confirm with a simulation using rbinom\nvar(rbinom(10000, 25, 0.3))\n\n\n\n# Chapter 2: Laws of probability  ----\n# Simulating the probability of A and B ----\n# Simulate 100,000 flips of a coin with a 40% chance of heads\nA <- rbinom(100000, 1, 0.4)\n\n# Simulate 100,000 flips of a coin with a 20% chance of heads\nB <- rbinom(100000, 1, 0.2)\n\n# Estimate the probability both A and B are heads\nmean(A & B)\n\n\n\n# Simulating the probability of A, B, and C ----\n# You've already simulated 100,000 flips of coins A and B\nA <- rbinom(100000, 1, .4)\nB <- rbinom(100000, 1, .2)\n\n# Simulate 100,000 flips of coin C (70% chance of heads)\nC <- rbinom(100000, 1, .7)\n\n# Estimate the probability A, B, and C are all heads\nmean(A & B & C)\n\n\n\n# Simulating probability of A or B ----\n# Simulate 100,000 flips of a coin with a 60% chance of heads\nA <- rbinom(100000, 1, .6)\n\n# Simulate 100,000 flips of a coin with a 10% chance of heads\nB <- rbinom(100000, 1, .1)\n\n# Estimate the probability either A or B is heads\nmean(A | B)\n\n\n\n# Probability either variable is less than or equal to 4 ----\n# Use rbinom to simulate 100,000 draws from each of X and Y\nX <- rbinom(100000, 10, .6)\nY <- rbinom(100000, 10, .7)\n\n# Estimate the probability either X or Y is <= to 4\nmean(X <= 4 | Y <= 4)\n\n# Use pbinom to calculate the probabilities separately\nprob_X_less <- pbinom(4, 10, .6)\nprob_Y_less <- pbinom(4, 10, .7)\n\n# Combine these to calculate the exact probability either <= 4\nprob_X_less + prob_Y_less - prob_X_less * prob_Y_less\n\n\n\n\n# Simulating multiplying a random variable ----\n# Simulate 100,000 draws of a binomial with size 20 and p = .1\nX <- rbinom(100000, 20, .1)\n\n# Estimate the expected value of X\nmean(X)\n\n# Estimate the expected value of 5 * X\nmean(5 * X)\n\n\n\n# Variance of a multiplied random variable ----\n# X is simulated from 100,000 draws of a binomial with size 20 and p = .1\nX <- rbinom(100000, 20, .1)\n\n# Estimate the variance of X\nvar(X)\n\n# Estimate the variance of 5 * X\nvar(5 * X)\n\n\n\n\n# Simulating adding two binomial variables ----\n# Simulate 100,000 draws of X (size 20, p = .3) and Y (size 40, p = .1)\nX <- rbinom(100000, 20, 0.3)\nY <- rbinom(100000, 40, 0.1)\n\n# Estimate the expected value of X + Y\nmean(X + Y)\n\n\n\n\n\n# Simulating variance of sum of two binomial variables ----\n# Simulation from last exercise of 100,000 draws from X and Y\nX <- rbinom(100000, 20, .3) \nY <- rbinom(100000, 40, .1)\n\n# Find the variance of X + Y\nvar(X + Y)\n\n# Find the variance of 3 * X + Y\nvar(3 * X + Y)\n\n\n\n\n\n# Chapter 3: Bayesian statistics ----\n# Updating with simulation ----\n# Simulate 50000 cases of flipping 20 coins from fair and from biased\nfair <- rbinom(50000, 20, .5)\nbiased <- rbinom(50000, 20, .75)\n\n# How many fair cases, and how many biased, led to exactly 11 heads?\nfair_11 <- sum(fair == 11)\nbiased_11 <- sum(biased == 11)\n\n# Find the fraction of fair coins that are 11 out of all coins that were 11\nfair_11 / (fair_11 + biased_11)\n\n\n\n# Updating with simulation after 16 heads ----\n# Simulate 50000 cases of flipping 20 coins from fair and from biased\nfair <- rbinom(50000, 20, .5)\nbiased <- rbinom(50000, 20, .75)\n\n# How many fair cases, and how many biased, led to exactly 16 heads?\nfair_16 <- sum(fair == 16)\nbiased_16 <- sum(biased == 16)\n\n# Find the fraction of fair coins that are 16 out of all coins that were 16\nfair_16 / (fair_16 + biased_16)\n\n\n\n# Updating with priors ----\n# Simulate 8000 cases of flipping a fair coin, and 2000 of a biased coin\nfair_flips <- rbinom(8000, 20, .5)\nbiased_flips <- rbinom(2000, 20, .75)\n\n# Find the number of cases from each coin that resulted in 14/20\nfair_14 <- sum(fair_flips == 14)\nbiased_14 <- sum(biased_flips == 14)\n\n# Use these to estimate the posterior probability\nfair_14 / (fair_14 + biased_14)\n\n\n\n# Updating with three coins ----\n# Compute the probability of getting 14/20 heads from fair/high/low coin\nprob_14_fair <- dbinom(14, 20, .5)\nprob_14_high <- dbinom(14, 20, .75)\nprob_14_low <- dbinom(14, 20, .25)\n\n# compute the probability that there were 14 from any of the three\nprob_14_overall <- 0.8 * prob_14_fair + 0.1 * prob_14_high + 0.1 * prob_14_low\n\n# Use these to compute the posterior probability that the coin was high\n0.1 * prob_14_high / prob_14_overall\n\n# Compute the posterior probability that the coin was low\n0.1 * prob_14_low / prob_14_overall\n\n\n\n\n# Updating with Bayes theorem ----\n# Use dbinom to calculate the probability of 11/20 heads with fair or biased coin\nprobability_fair <- dbinom(11, 20, .5)\nprobability_biased <- dbinom(11, 20, .75)\n\n# Calculate the posterior probability that the coin is fair\nprobability_fair / (probability_fair + probability_biased)\n\n\n\n# Updating for other outcomes ----\n# Find the probability that a coin resulting in 14/20 is fair\nprobability_fair <- dbinom(14, 20, .5)\nprobability_biased <- dbinom(14, 20, .75)\nprobability_fair / (probability_fair + probability_biased)\n\n# Find the probability that a coin resulting in 18/20 is fair\nprobability_fair <- dbinom(18, 20, .5)\nprobability_biased <- dbinom(18, 20, .75)\nprobability_fair / (probability_fair + probability_biased)\n\n\n\n\n# More updating with priors ----\n# Use dbinom to find the probability of 16/20 from a fair or biased coin\nprobability_16_fair <- dbinom(16, 20, .5)\nprobability_16_biased <- dbinom(16, 20, .75)\n\n# Use Bayes' theorem to find the posterior probability that the coin is fair\nprobability_16_fair * 0.99 / (probability_16_fair * 0.99 + probability_16_biased * 0.01)\n\n\n\n\n\n# Chapter 4: Related distributions ----\nlibrary(ggplot2)\ncompare_histograms <- function (variable1, variable2) {\n  x <- data.frame(value = variable1, variable = \"Variable 1\")\n  y <- data.frame(value = variable2, variable = \"Variable 2\")\n  ggplot(rbind(x, y), aes(value)) + geom_histogram() + facet_wrap(~variable, \n                                                                  nrow = 2)\n}\n\n# Simulating from the binomial and the normal ----\n# Draw a random sample of 100,000 from the Binomial(1000, .2) distribution\nbinom_sample <- rbinom(100000, 1000, .2)\n\n# Draw a random sample of 100,000 from the normal approximation\nnormal_sample <- rnorm(100000, 1000 * .2, sqrt(1000 * .2 * .8))\n\n# Compare the two distributions with the compare_histograms function\ncompare_histograms(binom_sample, normal_sample)\n\n\n\n# Comparing the cumulative density of the binomial ----\n# simulations from the normal and binomial distributions\nbinom_sample <- rbinom(100000, 1000, .2)\nnormal_sample <- rnorm(100000, 200, sqrt(160))\n\n# Use binom_sample to estimate the probability of <= 190 heads\nmean(binom_sample <= 190)\n\n# Use normal_sample to estimate the probability of <= 190 heads\nmean(normal_sample <= 190)\n\n# Calculate the probability of <= 190 heads with pbinom\npbinom(190, 1000, .2)\n\n# Calculate the probability of <= 190 heads with pnorm\npnorm(190, 200, sqrt(160))\n\n\n\n\n# Comparing the distributions of the normal and binomial for low n ----\n# Draw a random sample of 100,000 from the Binomial(10, .2) distribution\nbinom_sample <- rbinom(100000, 10, .2)\n\n# Draw a random sample of 100,000 from the normal approximation\nnormal_sample <- rnorm(100000, 10 * .2, sqrt(10 * .2 * .8))\n\n# Compare the two distributions with the compare_histograms function\ncompare_histograms(binom_sample, normal_sample)\n\n\n\n# Simulating from a Poisson and a binomial ----\n# Draw a random sample of 100,000 from the Binomial(1000, .002) distribution\nbinom_sample <- rbinom(100000, 1000, .002)\n\n# Draw a random sample of 100,000 from the Poisson approximation\npoisson_sample <- rpois(100000, 2)\n\n# Compare the two distributions with the compare_histograms function\ncompare_histograms(binom_sample, poisson_sample)\n\n\n\n# Density of the Poisson distribution ----\n# Simulate 100,000 draws from Poisson(2)\npoisson_sample <- rpois(100000, 2)\n\n# Find the percentage of simulated values that are 0\nmean(poisson_sample == 0)\n\n# Use dpois to find the exact probability that a draw is 0\ndpois(0, 2)\n\n\n\n\n# Sum of two Poisson variables ----\n# Simulate 100,000 draws from Poisson(1)\nX <- rpois(100000, 1)\n\n# Simulate 100,000 draws from Poisson(2)\nY <- rpois(100000, 2)\n\n# Add X and Y together to create Z\nZ <- X + Y\n\n# Use compare_histograms to compare Z to the Poisson(3)\ncompare_histograms(Z, rpois(100000, 3))\n\n\n\n# Waiting for first coin flip ----\n# Simulate 100 instances of flipping a 20% coin\nflips <- rbinom(100, 1, .2)\n\n# Use which to find the first case of 1 (\"heads\")\nwhich(flips == 1)[1]\n\n\n\n# Using replicate() for simulation ----\n# Existing code for finding the first instance of heads\nwhich(rbinom(100, 1, .2) == 1)[1]\n\n# Replicate this 100,000 times using replicate()\nreplications <- replicate(100000, which(rbinom(100, 1, .2) == 1)[1])\n\n# Histogram the replications with qplot\nqplot(replications)\n\n\n\n# Simulating from the geometric distribution -----\n# Replications from the last exercise\nreplications <- replicate(100000, which(rbinom(100, 1, .2) == 1)[1])\n\n# Generate 100,000 draws from the corresponding geometric distribution\ngeom_sample <- rgeom(100000, .2)\n\n# Compare the two distributions with compare_histograms\ncompare_histograms(replications, geom_sample)\n\n\n\n# Probability of a machine lasting X days ----\n# Find the probability the machine breaks on 5th day or earlier\npgeom(4, .1)\n\n# Find the probability the machine is still working on 20th day\n1 - pgeom(19, .1)\n\n\n\n\n# Graphing the probability that a machine still works ----\n# Calculate the probability of machine working on day 1-30\nstill_working <- 1 - pgeom(0:29, .1)\n\n# Plot the probability for days 1 to 30\nqplot(1:30, still_working)\n\n",
    "created" : 1501353397523.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1066380150",
    "id" : "6D84B2DE",
    "lastKnownWriteTime" : 1501417807,
    "last_content_update" : 1501417807920,
    "path" : "C:/Users/d91067/Desktop/datacamp/01_R/Foundations_of_probability_in_R/Foundations_of_probability_in_R.R",
    "project_path" : "Foundations_of_probability_in_R.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}