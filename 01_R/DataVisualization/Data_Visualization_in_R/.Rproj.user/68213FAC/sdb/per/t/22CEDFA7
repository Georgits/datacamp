{
    "collab_server" : "",
    "contents" : "library(MASS)\n\n\n# 4. Chapter 4: ---- \n# Constructing and displaying layout matrices\n  # Define row1, row2, row3 for plots 1, 2, and 3\n  row1 <- c(0, 1)\n  row2 <- c(2, 0)\n  row3 <- c(0, 3)\n  \n  # Use the matrix function to combine these rows into a matrix\n  layoutMatrix <- matrix(c(row1, row2, row3), \n                         byrow = TRUE, nrow = 3)\n  \n  # Call the layout() function to set up the plot array\n  layout(layoutMatrix)\n  \n  # Show where the three plots will go \n  layout.show(3)\n\n\n# Constructing and displaying layout matrices\n  # Create row1, row2, and layoutVector\n  row1 <- c(1, 0, 0)\n  row2 <- c(0, 2, 2)\n  layoutVector <- c(row1,rep(row2, 2))\n  \n  # Convert layoutVector into layoutMatrix\n  layoutMatrix <- matrix(layoutVector, byrow = TRUE, nrow = 3)\n  \n  # Set up the plot array\n  layout(layoutMatrix )\n  \n  # Plot scatterplot\n  plot(Boston$rad, Boston$zn)\n  \n  # Plot sunflower plot\n  sunflowerplot(Boston$rad, Boston$zn)\n  \n\n# Creating arrays with different sized plots\n  # Set up the plot array\n  layout(layoutMatrix)\n  \n  # Construct vectors indexB and indexA\n  indexB <- which(whiteside$Insul == \"Before\")\n  indexA <- which(whiteside$Insul == \"After\")\n  \n  # Create plot 1 and add title\n  plot(whiteside$Temp[indexB], whiteside$Gas[indexB],\n       ylim = c(0,8))\n  title(\"Before data only\")\n  \n  # Create plot 2 and add title\n  plot(whiteside$Temp, whiteside$Gas,\n       ylim = c(0,8))\n  title(\"Complete dataset\")\n  \n  # Create plot 3 and add title\n  plot(whiteside$Temp[indexA], whiteside$Gas[indexA],\n       ylim = c(0,8))\n  title(\"After data only\")\n  \n  \n\n# 5. Chapter 5: Advanced plot customization and beyond ------\n# Iliinsky and Steele's 12 recommended colors\n  # Iliinsky and Steele color name vector\n  IScolors <- c(\"red\", \"green\", \"yellow\", \"blue\",\n                \"black\", \"white\", \"pink\", \"cyan\",\n                \"gray\", \"orange\", \"brown\", \"purple\")\n  \n  # Create the data for the barplot\n  barWidths <- c(rep(2, 6), rep(1, 6))\n  \n  # Recreate the horizontal barplot with colored bars\n  barplot(rev(barWidths), horiz = TRUE,\n          col = rev(IScolors), axes = FALSE,\n          names.arg = rev(IScolors), las = 1)\n\n\n# Using color to enhance a bubbleplot\n  # Iliinsky and Steele color name vector\n  IScolors <- c(\"red\", \"green\", \"yellow\", \"blue\",\n                \"black\", \"white\", \"pink\", \"cyan\",\n                \"gray\", \"orange\", \"brown\", \"purple\")\n  \n  # Create the colored bubbleplot\n  symbols(Cars93$Horsepower, Cars93$MPG.city,\n          circles = Cars93$Cylinders, inches = 0.2, \n          bg = IScolors[as.numeric(Cars93$Cylinders)])\n\n\n  \n# Advanced plot customization and beyond \n  # Create a table of Cylinders by Origin\n  tbl <- table(Cars93$Cylinders, Cars93$Origin)\n  \n  # Create the default stacked barplot\n  barplot(tbl)\n  \n  # Enhance this plot with color\n  barplot(tbl, col = IScolors)\n  \n  \n# Saving plot results as files\n  # Call png() with the name of the file we want to create\n  png(\"barplot.png\")\n  \n  # Re-create the plot from the last exercise\n  barplot(tbl, col = IScolors)\n  \n  # Save our file and return to our interactive session\n  dev.off()\n  \n  # Verify that we have created the file\n  list.files(pattern = \"png\")\n  \n  \n# The tabplot package and grid graphics\n  # Load the insuranceData package\n  library(insuranceData)\n  \n  # Use the data() function to load the dataCar data frame\n  data(dataCar)\n  \n  # Load the tabplot package\n  suppressPackageStartupMessages(library(tabplot))\n  \n  # Generate the default tableplot() display\n  tableplot(dataCar)\n  \n  \n# A lattice graphics example\n  # Load the lattice package\n  library(lattice)\n  \n  # Use xyplot() to construct the conditional scatterplot\n  xyplot(calories ~ sugars | shelf , data = UScereal)\n  \n  \n# A ggplot2 graphics example\n  # Load the ggplot2 package\n  library(ggplot2)\n  \n  # Create the basic plot (not displayed): basePlot\n  basePlot <- ggplot(Cars93, aes(x = Horsepower, y = MPG.city))\n  \n  # Display the basic scatterplot\n  basePlot + geom_point()\n  \n  # Color the points by Cylinders value\n  basePlot + \n    geom_point(colour = IScolors[Cars93$Cylinders])\n  \n  # Make the point sizes also vary with Cylinders value\n  basePlot + \n    geom_point(colour = IScolors[Cars93$Cylinders], \n               size = as.numeric(Cars93$Cylinders))",
    "created" : 1493457137348.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "664820501",
    "id" : "22CEDFA7",
    "lastKnownWriteTime" : 1493459446,
    "last_content_update" : 1493459446701,
    "path" : "C:/Users/d91067/Desktop/datacamp/01_R/DataVisualization/Data_Visualization_in_R/Data_Visualization_in_R.R",
    "project_path" : "Data_Visualization_in_R.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}